#!/usr/bin/env python3
import time
import roslib
import rospy
import actionlib
from control_msgs.msg import *
from trajectory_msgs.msg import *


if __name__ == '__main__':
    
 # Iniciar un nodo


 # Declara la acción del tipo cliente


 print("Waiting for server...")

 # Metodo para espera conectarte al servidor de la acción


 print("Connected to server")

 # Declara las variables del brazo robotico
 # Lista de nombre
 # joint_names = 
 # Lista de valores de la configuracion del robot
 # Q0 = 
 
 # Definir el tipo de mensaje a utilizar
 g = FollowJointTrajectoryGoal()
 g.trajectory = JointTrajectory()
 
 # Definir los nombres de las articulaciones de g.trajectory
 
 # Definir la posicion inicial de g.trajectory
 
 # Enviar el objetivo y esperar por el resultado

    
 # Dormir un segundo

    
 # Para probar crear un bucle para que el robot mueva quinta articulacion 0.05 rad/s
 # Usar el metodo "robot_client.cancel_goal()" cada vez antes de iniciar el bucle
 # Para asegurarnos de terminar la accion antes de empezar otra



 # Despues de terminado el bucle, cancelar la ultima accion enviada
